#!/bin/bash
quack () {
squeue -ao %all | tail -n +2 | sort -t"|" -dk27,27 | awk -F '|' '{ if($45 == "RUNNING") {if($20 == "handyca") { if ($41 == "gpu_lucdh") { system("tput setaf 9; tput setab 3;") } else if ($41 == "amd-short") { system("tput setaf 3; tput setab 5;"); } else if ($41 == "cpu-short") { system("tput setaf 0; tput setab 5;") } else { system("tput setaf 3; tput setab 6;") } } else { system("tput setaf 2; tput setab 4;"); }  printf(" %3.3s ", $20); system("tput sgr0;"); }}';
echo "";
squeue -ao %all | tail -n +2 | sort -u -t"|" -dk20,20 | awk -v current_user="$(whoami)" -F '|' '{ if($46) {if($20 == current_user ) { system("tput setaf 3; tput setab 5;"); } else { system("tput setaf 2; tput setab 0;"); }  printf("  %16.16s  ", $20); }}'; tput sgr0;
echo "";
echo $(date);
echo "";
}
quack;
i=1; ucursor=0; while [ "$key" != "q" ] ; do 
if (( $SECONDS > 60 )) ; then quack; SECONDS=0; fi
read -sn1 -t 1 key # 1 char (not delimiter), silent
  read -sn1 -t 0.0001 k1 # This grabs all three symbols 
  read -sn1 -t 0.0001 k2 # and puts them together
  read -sn1 -t 0.0001 k3 # so you can case their entire input.
   key+=${k1}${k2}${k3} 
  case "$key" in
    $'\e[A'|$'\e0A')  # up arrow
        ((cur > 1)) && ((cur--))
        ucursor=$((ucursor-1));;
    $'\e[D'|$'\e0D') # left arrow
        ((cur > 1)) && ((cur--))
        ucursor=$((ucursor-1));;
    $'\e[B'|$'\e0B')  # down arrow
        ((cur < $#-1)) && ((cur++))
        ucursor=$((ucursor+1));;
    $'\e[C'|$'\e0C')  # right arrow
        ((cur < $#-1)) && ((cur++))
        ucursor=$((ucursor+1));;
    $'\e[1~'|$'\e0H'|$'\e[H')  # home key:
        cur=0
        echo home;;
    $'\e[4~'|$'\e0F'|$'\e[F')  # end key:
        ((cur=$#-1))
        echo end;;
    m) # m: my jobs
        squeue -ao %all -u handyca | tail -n +2 | awk -F '|' '{system("tput setaf 12;"); printf("%7.7s %8.8s %d %7.7s %7.7s %s %s %s\n", $20, $10, $3, $39, $12, $45, $41, $37)}' | sort -t" " -rnk10; 
        sleep 1; quack;;
    n) # n: nodes
        sinfo -ao %all | tail -n +2 | sort -t"|" -nk2,2 | awk -F"|" '{ if ($36 == "idle ") {system("tput setaf 1; tput setab 2;"); printf("%8.8s", $34);} else if ($36 == "mixed ") {system("tput setaf 1; tput setab 0;"); printf("%8.8s", $32);} else if ($36 == "allocated ") {system("tput setaf 2; tput setab 1"); printf("%8.8s", $32)}}'; tput setaf 3; printf " "$i" "$(date +'%H:%M')"\n";
        sleep 1; quack;;
    b) # n2: nodes2
        sinfo -ao %all | tail -n +2 | sort -u -dk12,12 | awk -F'|' {'printf("%7.7s", $12); if ($33 > 20.0) {system("tput setaf 1");} else if ($33 > 10.0) {system("tput setaf 3")} else {system("tput setaf 6");} printf(" %6.6s  ", $33); system("tput sgr0"); '}; echo "";
        sleep 1; quack;;
    u) # u: user info
        echo "name of user:"; read userreq;
        squeue -ao %all -u $userreq | tail -n +2 | awk -F '|' '{system("tput setaf 12;"); printf("%7.7s %8.8s %d %7.7s %7.7s %s %s %s\n", $21, $10, $3, $39, $12, $45, $42, $44)}' | sort -t" " -nk7;
        sleep 1; quack;;
    d) # d: date
        echo $(date);;
    r) # r: ruit
        echo r;;
    q) # q: quit
        echo Bye!
        exit;;
   esac
done
